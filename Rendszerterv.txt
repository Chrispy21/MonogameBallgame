-----------------------------
BEVEZETÉS
-----------------------------

A dokumentum Horváth Krisztián, Holló Márk, Sipos Dávid és Tóth-Pál Márkó közös projektje 
keretein belül létrejött szoftvert specifikálja.

-----------------------------
A RENDSZER CÉLJA
-----------------------------

A szoftver azon embereket célozza meg, akik szeretnek játszani és hajlandóak ezzel eltölteni a szabadidejüket is. A játék egy 
kellemes kikapcsolódást nyújt elvonja a figyelmet a mindennapi dolgokról
ezzel segítve a stressz levezetését.

-----------------------------
ÜTEMTERV
-----------------------------

Mellékelve: Ütemterv.txt
Az ügyféllel való konzultációk időpontjai:
•    Első meeting – 2017/10/11
•    Második meeting – 2017/11/14
•    Harmadik meeting– 2017/12/13

-----------------------------
MÉRFÖLDKÖVEK
-----------------------------

Melléklet: Követelmény specifikáció.txt, 3-as pont


AZ ALKALMAZÁS ÁLTALÁNOS KÖVETELMÉNYEI

------------------------------
Nem funkcionális követelmények
------------------------------

- Egyszerű, minimalista téma/design
- Akadálymentes felület biztosítása
- Fix 1280x768 felbontású
- Klasszikus grafikus felület


Támogatott eszközök:

A szoftver a következő operációs rendszereken használható:
- Windows 7 32/64 bit
- Windows 8 32/64 bit
- Windows 8.1 32/64 bit
- Windows 10 32/64 bit


Hibakezelés:

Az alkalmazás használata közben felmerülő hibák:
1. .NET hiánya által keletkezett hibák
    - A minimális rendszer követelményekről tájékoztatva van a felhasználó.

2. nem kezelt belső program hiba
    - A felhasználónak lehetősége van a verziókezelő rendszerben tájékoztatni a fejlesztőket a hibáról

-----------------------------
FUNKCIONÁLIS TERV
-----------------------------

Melléklet: Funkcionális specifikáció.txt
A funkcionális specifikációban leírtakra válaszoló tervek a következők:


-----------------------------
Az alkalmazás három fő részre bontása:
-----------------------------

-A játék menü része és annak menüpontjai, ami öt gombot tartalmaz, amiből három az almenük közötti válogatást teszi lehetővé.
-A játék és annak különböző grafikai elemei és funkciói.

-----------------
A Main Menu terve
-----------------

A menü funkcionális részét egy létrehozott osztály foglalja magába, ami megszabja a menü méreteit és annak alapvető tulajdonságait. Ennek a neve MenuState.


A menüt több részre oszthatjuk fel, mivel a főmenün belül megtalálhatóak további almenük.
(DescriptionState, SelectLevelState, OptionsState)

A főmenü öt darab gombot tartalmaz, amiből három különböző almenübe vezet át.
- New Game (Új Játék), ami egy új játékmenet elindítására szolgál.
- Select Level (Pálya Választás), ami a pályák közötti tetszőleges választást teszi lehetővé.
- Description (Leírás), ami a játékhoz tartozó leírást és néhány tippet tartalmaz.
- Options (Beállítások), ahol testre lehet szabni a racket (ütő) irányítását.
- Quit Game (Kilépés), amivel kilehet lépni a programból.

Az almenükben található szövegek különböző méretűek és a “BatmanForever” betűtípust használják.


A gombok egyedi több rétegből felépülő retro stílusú 236x56 felbontású, png formátumú képek, amik “külső ragyogás” (outer glow) 
effekttel rendelkeznek.

A menü háttere egy 1280x768 felbontású, png formátumú kép, ami egy “homályosítás” (blur) effekttel rendelkezik.


-----------------
A Játék terve
-----------------

A main menu-be visszavezető gombot a képernyő közepére helyeztük a pause menüben.
A pause menü meghívásakor a játék alkotó elemei láthatóak, de a labda és az ütő mozgása megáll.

A játék felület nagy részét a téglák (az adott pálya), a labda és az ütő foglalja el. Ez alatt helyezkedik el az alsó szegő, 
amin az életünk, a fennmaradó téglák és a pontszám található.
Ezen az elemen különböző szöveg formázó effektekkel helyeztük el a szövegeket.
Ha az összes téglát kiütötte a user, akkor léphet új pályára.

-----------------
A Success Menu terve
-----------------

Amikor a felhasználó (user) kiüti az összes téglát a pályán, ez a menü jelenik meg, majd (ha még van pálya) alapértelmezetten 
az “N” betű lenyomására léphet a következő szintre.
Ebben a részben a pálya sikeres feliratot találjuk, valamint a következő szintre való lépéshez szükséges gombot.

-----------------
Egyéb rendszerelemek
-----------------

Az alkalmazásban az összes gomb egy (általunk) létrehozott séma alapján készült 
A téglákra, ütőre, és a labdára szintén ez vonatkozik.

A téglák széttörésének animációját is saját kezűleg csináltuk.
A menü animációkat saját osztályok végzik (MenuState).

-----------------
Az alkalmazás kódja
-----------------

Fő elem a Main.cs
------------------------

Ez az ős osztály, itt összpontosul a hívások nagy része. 

Tagok:
.....

LevelList(): - a megírt pályák listába töltése

ChangeState(): a főmenü és a gameboard közötti váltó 

Main(): beállítja a grafikai elemeket alapértelmezettnek

Initialize(): a játékablak méreteinek beállítása

LoadContent(): Csinál egy új SpriteBatch-t, ami a textúrák kirajzolásához használható, itt töltődik be minden külső grafikai elem.

StartGame(): beállítja a kezdő pályát és legenerálja a brickeket. LoadContent hívja meg és példányosítja a grafikai elemeket.SetLevelt hívja meg.

Update():frissíti a játéktér adatait(timerek,menüket,aktuális pályát) 

Draw(): a játér grafikai elemeit rajzolja ki futásidőben

SetLevel():ellenőrzi, hogy level típusú level van megadva.Indexeli a level tipusú pályákat.

GetBrickSprite(BrickType type):visszatér egy indexelt brick tipussal, amit a LoadContentben felhasználva tölti be az entitit.

GetBallSprite(BallType type):visszatér egy indexelt ball tipussal, amit a LoadContentben felhasználva tölti be az entitit.

GetRacketSprite(RacketType type):visszatér egy indexelt racekt tipussal, amit a LoadContentben felhasználva tölti be az entitit.

GetCollectibleSprite(CollectibleType type):visszatér egy indexelt collectible tipussal, amit a LoadContentben felhasználva tölti be az entitit.


Entity.cs
------------
Minden test ősosztálya.

Entity(int x, int y, Texture2D sprite):Az entity textúrája és pozícióját állítja be

Draw: kirajzolja a test textúráját, az entity testét, amiben a pozíciója van eltárolva,ami az ütközéshez kell.

Update(GameTime gameTime): frissíti a játék adatait(timerek)

Destroy():Eltünteti az adott entity-t.


Ball.cs
--------

A labda mozgásának kidolgozása

Kill:eltünteti a labdát.

Update(GameTime gameTime):frissíti a timert,HandleCollisions() hívja meg, ami az ütközéseket kezeli más entity-kel.Ellenőrzi hogy hányszor esett le a labda.

HandleCollisions():Az ütközéseket kezeli más Entitykkel.Ellenőrzi a tégla és a labda ütközését.Ellenőrzi az ütő és a labda ütközését.Megakadályozza, hogy a labda kimenjen a képernyőről.


BrickParticle.cs
--------------------
Kiütött téglák animációja, részecskék kidolgozása.

Draw(GameTime gameTime):Futási időben rajzolja ki a téglák részecskéit.


Collectible.cs
------------------
A felvehető tárgyakat kezeli.

Update(GameTime gameTime):timereket frissít, vizsgálja hogy a játékos felvette-e a collectible-t.
Meghívja az OnPickup-ot és a Destroy-t

OnPickup():Akkor hívódik meg, ha felveszi a játékos a collectiblet.Meghívja a Destroy-t, amivel eltünteti.


Brick.cs
-----------
A téglák definiálása 

OnHit:Akkor hívódik meg amikor a téglát megüti a labda.

OnBreak:Akkor fut le, amikor a tégla széttörik.Chance=az esélye annak, hogy egy collectible-t fog dobni.

Update:A labda és a téglák ütközését vizsgálja, timerek frissítése.Meghívja az OnHit metódust.

Destroy:overridolt metódus, eltünteti a kiütött téglákat.


MovingEntity.cs
-----------------
Minden mozgó entity őse. A mozgás definiálása.

Update: Move-ot hívja meg és frissíti a timert.

Move: Az x és y tengelyi mozgást állítja be.


Player.cs
--------
Az ütő kidolgozása

Update: Timer frissítése, keyboardState, az ütő mozgatása billentyűlenyomásra.isFrozen ha 
felveszi a játékos az ütő fagyasztót.IsInputInverted ha a játékos trollfacet vesz fel. 

Draw:játék időben rajzolja ki ha a játékos felveszi az ütő hosszabítót,scaleEffect 1,7x növeli az ütőt.


Level.cs
-----------
A pályák ősosztálya.

Level:Listába tölti az entitiket. Definiálja az első labdát a játékban.Meghívja a Initialize-t, 
ami az ütő és a labda létrehozásáért felel.

Initialize:az első ütőt és a labdát hozza létre.

Update:Timert és minden entity-t frissít a játékban.

Draw:A pályán lévő entity-k kirajzolása.

GenerateBricks:feltölti a pályát téglákkal. Levelx.cs-ben van kidolgozva.

SpawnCollectible:Létrehoz egy Collectible-t x,y pozíció szerint, típust választ és sebességet ad neki.

DestroyEntity:Eltöröl egy Entity-t.

CreateBall:Létrehoz egy labdát x,y pozíció alapján és beállítja a típusát a labdának.Hozzáadja az EntityListhez.

CreateBrick:Létrehoz egy téglát x,y pozícióval.Hozzáadja az EntityListhez. 

CreatePlayer: Létrehozza az ütőt a játékban és hozzáadja az EntityListhez.


DescriptionState.cs
--------------------------
A leírás menüpont kidolgozása

Draw(GameTime gameTime, SpriteBatch SpriteBatch) : Betölti a képet, illetve megváltoztatja az aktuális kép méretét.

Update(GameTime gameTime) : Meghívja a visszagombot.

BackButton_Click(object sender, EventArgs e) : Lekezeli a visszalépés gombot.


GameState.cs
------------------
A játék elemeinek lekezelése.

Draw(GameTime gameTime, SpriteBatch SpriteBatch) : Betölti a hátteret és az alsó szegőt, 
illetve kiíratja a hátralevő életek számát, a téglák számát és a pontszámot.

Update(GameTime gameTime) : Meghívja az aktuális pályát.


MenuState.cs
-----------------
A főmenüt és annak gombjait kezeli.

Draw(GameTime gameTime, SpriteBatch SpriteBatch) : Kirajzolja a főmenü alapvető elemeit.

Update(GameTime gameTime) :

newGameButton_Click(object sender, EventArgs e) : Gomb, ami új játékot indít.

selectLevelGameButton_Click(object sender, EventArgs e) : Gomb, aminek lenyomására belépünk a selectLevel menübe

quitGameButton_Click(object sender, EventArgs e) : Gomb, ami kilép a programból.

DescriptionGameButton_Click(object sender, EventArgs e) : Gomb, ami a leírás almenüt hívja meg.

OptionsGameButton_Click(object sender, EventArgs e) : Gomb, ami a beállítások almenüt hívja meg.


OptionsState.cs
--------------------
A beállítások almenüt kezeli.

Draw(GameTime gameTime, SpriteBatch SpriteBatch) : Options kiíratása betűméret változtatásával

Update(GameTime gameTime): Lekezeli a gombok állíthatóságát.

BackButton_Click(object sender, EventArgs e) : Lekezeli a visszalépés gombot.

LeftButton_Click(object sender, EventArgs e) : Keybindings beállítása balra.

RightButton_Click(object sender, EventArgs e) : Keybindings beállítása jobbra.

StartButton_Click(object sender, EventArgs e) : Keybindings beállítása elindításhoz.


SelectLevelState.cs
--------------------
A pályaválasztás almenüt kezeli.

Draw(GameTime gameTime, SpriteBatch SpriteBatch) : Lekezeli a hat darab pályagombot, 
egy random level gombot és a visszalépés gombot.

Update(GameTime gameTime):

BackButton_Click(object sender, EventArgs e) : Lekezeli a visszalépés gombot.

Level1Button_Click(object sender, EventArgs e) : Meghívja az 1. pályát.

Level2Button_Click(object sender, EventArgs e) : Meghívja a 2. pályát.

Level3Button_Click(object sender, EventArgs e) : Meghívja a 3. pályát.

Level4Button_Click(object sender, EventArgs e) : Meghívja a 4. pályát.

Level5Button_Click(object sender, EventArgs e) : Meghívja az 5. pályát.

Level6Button_Click(object sender, EventArgs e) : Meghívja a 6. pályát.

RandomLevel_Click(object sender, EventArgs e) : Kiválaszt egy pályát véletlenszerűen.


State.cs
--------------------
Draw(GameTime gameTime, SpriteBatch SpriteBatch) : kirajzolásban segéd metódus

Update(GameTime gameTime) :Frissíti a timereket

State(Main game, GraphicsDevice graphicsDevice, ContentManager content) : játék indításában van szerepe


Component.cs
--------------------
A játék komponenseinek kirajzolásában segít

Draw(): a játék grafikai elemeit rajzolja ki futásidőben

Update():frissíti a játéktér adatait(timerek,menüket,aktuális pályát) 


DelayedAction.cs
------------------------

DelayedAction():

Update():frissíti a játéktér adatait(timerek,menüket,aktuális pályát) 

Button.cs
--------------
Pause menü gombok létrehozása

Load(): Betöltjük a gombok textúráját és a pozícióknak adunk egy alap értéket

Update(): Timerek frissítése, megadjuk a gombok pozícióját

Draw():Kirajzoljuk a gombokat a megadott pozícióban

ButtonMenu.cs
--------------------
MainMenu gombok létrehozása

Rectangle(): új négyzet deklarálása és pozíciójának meghatározása

ButtonMenu(): textúra és betűtipus meghatározása

Draw():Gombok és azok szövegeinek kirajzolása

Update():frissíti a játéktér adatait


---------------------------
FIZIKAI KÖRNYEZET
--------------------------

Az alkalmazás háttere (backend) a .NET alapján fut.
A rendszernek nem célja a többi operációs rendszeren való futás.

-----------------
TESZTTERV
-----------------

Melléklet: Tesztterv.txt

-------------------------
TELEPÍTÉSI TERV
------------------------

Az alkalmazás telepítés nélkül futtatható (portable) egy .exe segítségével Windows operációs rendszereken.

--------------------------------
KARBANTARTÁSI TERV
-------------------------------

Az alkalmazás minimális karbantartást igényel, amely a következőkre bontható:
- Ellenőrizni kell, hogy a jövőben kiadott .NET verziókkal kompatibilis-e az alkalmazás.
- Idő elteltével új pályákat, elemeket kell hozzáadni a játékhoz, hogy fent tartsuk az érdeklődési szintet.
